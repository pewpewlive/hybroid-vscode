{
  "scopeName": "scope.livecode",
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Livecode",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#single_strings" },
    { "include": "#double_strings" },
    { "include": "#single_comments" },
    { "include": "#block_comments" },
    { "include": "#variables" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.livecode",
          "match": "\\b(if|while|for|return|in|with|to|as|repeat|tick|spawn|enum|use|fn|match)\\b"
        },
        {
          "comment": "logical operators",
          "name": "keyword.operator.logical.livecode",
          "match": "(\\^|\\||\\|\\||&&|<<|>>|!)(?!=)"
        },
        {
          "comment": "logical AND, borrow references",
          "name": "keyword.operator.borrow.and.livecode",
          "match": "&(?![&=])"
        },
        {
          "comment": "assignment operators",
          "name": "keyword.operator.assignment.livecode",
          "match": "(\\+=|-=|\\*=|/=|%=|\\^=|&=|\\|=|<<=|>>=)"
        },
        {
          "comment": "single equal",
          "name": "keyword.operator.assignment.equal.livecode",
          "match": "(?<![<>])=(?!=|>)"
        },
        {
          "comment": "comparison operators",
          "name": "keyword.operator.comparison.livecode",
          "match": "(=(=)?(?!>)|!=|<=|(?<!=)>=)"
        },
        {
          "comment": "math operators",
          "name": "keyword.operator.math.livecode",
          "match": "(([+%]|(\\*(?!\\w)))(?!=))|(-(?!>))|(/(?!/))"
        },
        {
          "comment": "decimal integers and floats",
          "name": "constant.numeric.decimal.rust",
          "match": "\\b\\d[\\d_]*(\\.?)[\\d_]*(?:(E|e)([+-]?)([\\d_]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\b",
          "captures": {
            "1": {
              "name": "punctuation.separator.dot.decimal.rust"
            },
            "2": {
              "name": "keyword.operator.exponent.rust"
            },
            "3": {
              "name": "keyword.operator.exponent.sign.rust"
            },
            "4": {
              "name": "constant.numeric.decimal.exponent.mantissa.rust"
            },
            "5": {
              "name": "entity.name.type.numeric.rust"
            }
          }
        }
      ]
    },
    "single_strings": {
      "name": "string.quoted.single.livecode",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.livecode",
          "match": "\\\\."
        }
      ]
    },
    "double_strings": {
      "name": "string.quoted.double.livecode",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.livecode",
          "match": "\\\\."
        }
      ]
    },
    "single_comments": {
      "name": "comment.line.double-slash.livecode",
      "begin": "//",
      "end": "\n"
    },
    "block_comments": {
      "name": "comment.block.livecode",
      "begin": "/\\*",
      "end": "\\*/"
    },
		"variables": {
			"patterns": [
				{
					"comment": "variables",
					"name": "variable.other.rust",
					"match": "\\b(?<!(?<!\\.)\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\b"
				}
			]
		}
  }
}
